#!/bin/bash

# Most reliable way to get the path for this script.
# h/t: https://stackoverflow.com/questions/192292/bash-how-best-to-include-other-scripts/12694189#12694189
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]];
then
    DIR="$PWD"
fi

# Load common configs for this script.
source "${DIR}/_config.sh"
source "${DIR}/_init_db.sh"

function usage() {
    echo -n "Usage: $(basename "$0") [options]

Make sure the development environment is up to date.

Options:
    --help      Display this usage information.
    --ssh       Install GitHub dependencies over SSH.
    --https     Install GitHub dependencies over HTTPS (default).
"
}

function build() {
    # Run the update build.
    echo "Installing the API server..."
    echo "----------------------------"
    server=./grout-server
    if [ ! -d "$server" ];
    then
        echo "API server does not exist in ${server} -- cloning from GitHub..."

        if [ "$1" = "ssh"  ];
        then
            echo "Cloning over SSH..."
            giturl=git@github.com:azavea/grout-server.git
        else
            # Default to HTTPS.
            echo "Cloning over HTTPS"...
            giturl=https://github.com/azavea/grout-server.git
        fi

        git clone $giturl $server
        echo "Creating environmental variables in ${server}/.env..."
        cp ${server}/.env.example ${server}/.env
        echo "Server installation complete!"
    else
        echo "Skipping API server installation since ${server} already exists."
    fi
    echo

    echo "Building container images..."
    echo "----------------------------"
    docker-compose build
    echo

    echo "Installing NPM packages..."
    echo "----------------------------"
    docker-compose run --rm --entrypoint "yarn install" editor
    echo

    echo "Running migrations in the Grout server..."
    echo "-----------------------------------------"
    init_db
    docker-compose run --rm grout manage.py migrate
    echo

    echo "Uploading sample data..."
    echo "-------------------------"
    docker-compose run --rm loaddata
    echo

    echo "Stopping all running services..."
    echo "--------------------------------"
    docker-compose stop
    echo

    echo "Build complete!"
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]
then
    if [ -z "$1" ];
    then
        build
    else
        case "$1" in
            -h|--help)
                usage
                exit 0
                ;;

            --ssh)
                build ssh
                exit 0
                ;;

            --https)
                build https
                exit 0
                ;;

            *)
                echo "ERROR: Argument '"$1"' not registered."
                echo
                usage
                exit 1
                ;;
        esac
    fi
fi
